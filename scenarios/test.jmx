<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="apha-apps-perms-move-animal-ui Performance Tests">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Task list">
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">600</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Task page HTTP request">
          <stringProp name="HTTPSampler.domain">apha-apps-perms-move-animal-ui.${__P(env)}.cdp-int.defra.cloud</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/task-list</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer">
          <intProp name="calcMode">2</intProp>
          <doubleProp>
            <name>throughput</name>
            <value>6000.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Submit">
        <intProp name="ThreadGroup.num_threads">5</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">600</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller">
          <intProp name="InterleaveControl.style">1</intProp>
          <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
        </InterleaveControl>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Skipped file">
              <stringProp name="HTTPSampler.domain">apha-apps-perms-case-mgmt-api.${__P(env)}.cdp-int.defra.cloud</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/submit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sections&quot;: [{&#xd;
    &quot;title&quot;: &quot;Movement origin&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;origin&quot;, &#xd;
    &quot;questionAnswers&quot;: [&#xd;
      {&#xd;
        &quot;question&quot;: &quot;Are you moving the animals on or off your farm or premises?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;onOffFarm&quot;,&#xd;
        &quot;answer&quot;: { &#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;off&quot;,&#xd;
          &quot;displayText&quot;: &quot;Off the farm or premises&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What type of premises are the animals moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;originType&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;tb-restricted-farm&quot;,&#xd;
          &quot;displayText&quot;: &quot;TB restricted farm&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the County Parish Holding (CPH) number of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;cphNumber&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;12/345/6789&quot;,&#xd;
          &quot;displayText&quot;:&quot;12/345/6789&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the address of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;address&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;address&quot;,&#xd;
          &quot;value&quot;: {&#xd;
            &quot;addressLine1&quot;:&quot;Starfleet Headquarters&quot;,&#xd;
            &quot;addressTown&quot;:&quot;San Francisco&quot;,&#xd;
            &quot;addressPostcode&quot;:&quot;N11 1NN&quot;&#xd;
          },&#xd;
          &quot;displayText&quot;:&quot;Starfleet Headquarters\nSan Franciso\nN11 1NN&quot;&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Movement destination&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;destination&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;: &quot;Where are the animals going to?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;destinationType&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;radio&quot;,&#xd;
        &quot;value&quot;: &quot;slaughter&quot;,&#xd;
        &quot;displayText&quot;:&quot;Slaughter&quot;&#xd;
      }&#xd;
    }]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Receiving the licence&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;licence&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;:&quot;What is the name of the registered owner of the cattle?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;fullName&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;name&quot;,&#xd;
        &quot;value&quot;: {&#xd;
          &quot;firstName&quot;:&quot;John&quot;,&#xd;
          &quot;lastName&quot;:&quot;Doe&quot;&#xd;
        },&#xd;
        &quot;displayText&quot;:&quot;John Doe&quot;&#xd;
      }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;How would you like this licence sent to you?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;receiveMethod&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;:&quot;email&quot;,&#xd;
          &quot;displayText&quot;:&quot;Email&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;What email address would you like the licence sent to?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;emailAddress&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;name@example.com&quot;,&#xd;
          &quot;displayText&quot;:&quot;eoin.corr@esynergy.co.uk&quot;&#xd;
        }&#xd;
      }]&#xd;
    },&#xd;
    {&#xd;
        &quot;title&quot;: &quot;Biosecurity Map&quot;,&#xd;
        &quot;sectionKey&quot;: &quot;biosecurity-map&quot;, &#xd;
        &quot;questionAnswers&quot;: [{&#xd;
            &quot;question&quot;: &quot;Upload a map&quot;,&#xd;
            &quot;questionKey&quot;: &quot;upload-plan&quot;,&#xd;
            &quot;answer&quot;:{&#xd;
                &quot;type&quot;: &quot;file&quot;,&#xd;
                &quot;value&quot;: {&#xd;
                    &quot;skipped&quot;: true&#xd;
                },&#xd;
                &quot;displayText&quot;: &quot;Missing biosecurity map. Check the CSC TB licencing mailbox for an emailed version from the applicant.&quot;&#xd;
            }&#xd;
        }]&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Status code assertion">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion">
                <stringProp name="JSON_PATH">$.message</stringProp>
                <stringProp name="EXPECTED_VALUE">/^TB-\w{4}-\w{4}$/</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Large pdf">
              <stringProp name="HTTPSampler.domain">apha-apps-perms-case-mgmt-api.${__P(env)}.cdp-int.defra.cloud</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/submit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sections&quot;: [{&#xd;
    &quot;title&quot;: &quot;Movement origin&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;origin&quot;, &#xd;
    &quot;questionAnswers&quot;: [&#xd;
      {&#xd;
        &quot;question&quot;: &quot;Are you moving the animals on or off your farm or premises?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;onOffFarm&quot;,&#xd;
        &quot;answer&quot;: { &#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;off&quot;,&#xd;
          &quot;displayText&quot;: &quot;Off the farm or premises&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What type of premises are the animals moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;originType&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;tb-restricted-farm&quot;,&#xd;
          &quot;displayText&quot;: &quot;TB restricted farm&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the County Parish Holding (CPH) number of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;cphNumber&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;12/345/6789&quot;,&#xd;
          &quot;displayText&quot;:&quot;12/345/6789&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the address of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;address&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;address&quot;,&#xd;
          &quot;value&quot;: {&#xd;
            &quot;addressLine1&quot;:&quot;Starfleet Headquarters&quot;,&#xd;
            &quot;addressTown&quot;:&quot;San Francisco&quot;,&#xd;
            &quot;addressPostcode&quot;:&quot;N11 1NN&quot;&#xd;
          },&#xd;
          &quot;displayText&quot;:&quot;Starfleet Headquarters\nSan Franciso\nN11 1NN&quot;&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Movement destination&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;destination&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;: &quot;Where are the animals going to?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;destinationType&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;radio&quot;,&#xd;
        &quot;value&quot;: &quot;slaughter&quot;,&#xd;
        &quot;displayText&quot;:&quot;Slaughter&quot;&#xd;
      }&#xd;
    }]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Receiving the licence&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;licence&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;:&quot;What is the name of the registered owner of the cattle?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;fullName&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;name&quot;,&#xd;
        &quot;value&quot;: {&#xd;
          &quot;firstName&quot;:&quot;John&quot;,&#xd;
          &quot;lastName&quot;:&quot;Doe&quot;&#xd;
        },&#xd;
        &quot;displayText&quot;:&quot;John Doe&quot;&#xd;
      }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;How would you like this licence sent to you?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;receiveMethod&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;:&quot;email&quot;,&#xd;
          &quot;displayText&quot;:&quot;Email&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;What email address would you like the licence sent to?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;emailAddress&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;name@example.com&quot;,&#xd;
          &quot;displayText&quot;:&quot;eoin.corr@esynergy.co.uk&quot;&#xd;
        }&#xd;
      }]&#xd;
    },&#xd;
    {&#xd;
        &quot;title&quot;: &quot;Biosecurity Map&quot;,&#xd;
        &quot;sectionKey&quot;: &quot;biosecurity-map&quot;, &#xd;
        &quot;questionAnswers&quot;: [{&#xd;
            &quot;question&quot;: &quot;upload a map&quot;,&#xd;
            &quot;questionKey&quot;: &quot;upload-plan&quot;,&#xd;
            &quot;answer&quot;:{&#xd;
                &quot;type&quot;: &quot;file&quot;,&#xd;
                &quot;value&quot;: {&#xd;
                    &quot;skipped&quot;: false,&#xd;
                    &quot;path&quot;: &quot;/biosecurity-map/a514adfe-cc41-481f-b8e9-ac52a08c20b9/c12cc59e-d982-48b2-b074-63ace733fd52&quot;&#xd;
                },&#xd;
              &quot;displayText&quot;: &quot;Large_pdf&quot;&#xd;
            }&#xd;
        }]&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Status code assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51542">413</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.error</stringProp>
                <stringProp name="EXPECTED_VALUE">&quot;FILE_CANNOT_BE_DELIVERED&quot;</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Small pdf">
              <stringProp name="HTTPSampler.domain">apha-apps-perms-case-mgmt-api.${__P(env)}.cdp-int.defra.cloud</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/submit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sections&quot;: [{&#xd;
    &quot;title&quot;: &quot;Movement origin&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;origin&quot;, &#xd;
    &quot;questionAnswers&quot;: [&#xd;
      {&#xd;
        &quot;question&quot;: &quot;Are you moving the animals on or off your farm or premises?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;onOffFarm&quot;,&#xd;
        &quot;answer&quot;: { &#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;off&quot;,&#xd;
          &quot;displayText&quot;: &quot;Off the farm or premises&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What type of premises are the animals moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;originType&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;tb-restricted-farm&quot;,&#xd;
          &quot;displayText&quot;: &quot;TB restricted farm&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the County Parish Holding (CPH) number of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;cphNumber&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;12/345/6789&quot;,&#xd;
          &quot;displayText&quot;:&quot;12/345/6789&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the address of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;address&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;address&quot;,&#xd;
          &quot;value&quot;: {&#xd;
            &quot;addressLine1&quot;:&quot;Starfleet Headquarters&quot;,&#xd;
            &quot;addressTown&quot;:&quot;San Francisco&quot;,&#xd;
            &quot;addressPostcode&quot;:&quot;N11 1NN&quot;&#xd;
          },&#xd;
          &quot;displayText&quot;:&quot;Starfleet Headquarters\nSan Franciso\nN11 1NN&quot;&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Movement destination&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;destination&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;: &quot;Where are the animals going to?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;destinationType&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;radio&quot;,&#xd;
        &quot;value&quot;: &quot;slaughter&quot;,&#xd;
        &quot;displayText&quot;:&quot;Slaughter&quot;&#xd;
      }&#xd;
    }]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Receiving the licence&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;licence&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;:&quot;What is the name of the registered owner of the cattle?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;fullName&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;name&quot;,&#xd;
        &quot;value&quot;: {&#xd;
          &quot;firstName&quot;:&quot;John&quot;,&#xd;
          &quot;lastName&quot;:&quot;Doe&quot;&#xd;
        },&#xd;
        &quot;displayText&quot;:&quot;John Doe&quot;&#xd;
      }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;How would you like this licence sent to you?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;receiveMethod&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;:&quot;email&quot;,&#xd;
          &quot;displayText&quot;:&quot;Email&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;What email address would you like the licence sent to?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;emailAddress&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;name@example.com&quot;,&#xd;
          &quot;displayText&quot;:&quot;eoin.corr@esynergy.co.uk&quot;&#xd;
        }&#xd;
      }]&#xd;
    },&#xd;
    {&#xd;
        &quot;title&quot;: &quot;Biosecurity Map&quot;,&#xd;
        &quot;sectionKey&quot;: &quot;biosecurity-map&quot;, &#xd;
        &quot;questionAnswers&quot;: [{&#xd;
            &quot;question&quot;: &quot;upload a map&quot;,&#xd;
            &quot;questionKey&quot;: &quot;upload-plan&quot;,&#xd;
            &quot;answer&quot;:{&#xd;
                &quot;type&quot;: &quot;file&quot;,&#xd;
                &quot;value&quot;: {&#xd;
                    &quot;skipped&quot;: false,&#xd;
                    &quot;path&quot;: &quot;/biosecurity-map/2a5a8fd7-248d-4356-84ab-618d8119e600/f6a6d844-c36f-4b64-8e76-dd36990db646&quot;&#xd;
                },&#xd;
                &quot;displayText&quot;: &quot;Small_pdf&quot;&#xd;
            }&#xd;
        }]&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Status code assertion">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion">
                <stringProp name="JSON_PATH">$.message</stringProp>
                <stringProp name="EXPECTED_VALUE">/^TB-\w{4}-\w{4}$/</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Large image">
              <stringProp name="HTTPSampler.domain">apha-apps-perms-case-mgmt-api.${__P(env)}.cdp-int.defra.cloud</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/submit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sections&quot;: [{&#xd;
    &quot;title&quot;: &quot;Movement origin&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;origin&quot;, &#xd;
    &quot;questionAnswers&quot;: [&#xd;
      {&#xd;
        &quot;question&quot;: &quot;Are you moving the animals on or off your farm or premises?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;onOffFarm&quot;,&#xd;
        &quot;answer&quot;: { &#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;off&quot;,&#xd;
          &quot;displayText&quot;: &quot;Off the farm or premises&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What type of premises are the animals moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;originType&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;tb-restricted-farm&quot;,&#xd;
          &quot;displayText&quot;: &quot;TB restricted farm&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the County Parish Holding (CPH) number of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;cphNumber&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;12/345/6789&quot;,&#xd;
          &quot;displayText&quot;:&quot;12/345/6789&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the address of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;address&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;address&quot;,&#xd;
          &quot;value&quot;: {&#xd;
            &quot;addressLine1&quot;:&quot;Starfleet Headquarters&quot;,&#xd;
            &quot;addressTown&quot;:&quot;San Francisco&quot;,&#xd;
            &quot;addressPostcode&quot;:&quot;N11 1NN&quot;&#xd;
          },&#xd;
          &quot;displayText&quot;:&quot;Starfleet Headquarters\nSan Franciso\nN11 1NN&quot;&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Movement destination&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;destination&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;: &quot;Where are the animals going to?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;destinationType&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;radio&quot;,&#xd;
        &quot;value&quot;: &quot;slaughter&quot;,&#xd;
        &quot;displayText&quot;:&quot;Slaughter&quot;&#xd;
      }&#xd;
    }]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Receiving the licence&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;licence&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;:&quot;What is the name of the registered owner of the cattle?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;fullName&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;name&quot;,&#xd;
        &quot;value&quot;: {&#xd;
          &quot;firstName&quot;:&quot;John&quot;,&#xd;
          &quot;lastName&quot;:&quot;Doe&quot;&#xd;
        },&#xd;
        &quot;displayText&quot;:&quot;John Doe&quot;&#xd;
      }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;How would you like this licence sent to you?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;receiveMethod&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;:&quot;email&quot;,&#xd;
          &quot;displayText&quot;:&quot;Email&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;What email address would you like the licence sent to?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;emailAddress&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;name@example.com&quot;,&#xd;
          &quot;displayText&quot;:&quot;eoin.corr@esynergy.co.uk&quot;&#xd;
        }&#xd;
      }]&#xd;
    },&#xd;
    {&#xd;
        &quot;title&quot;: &quot;Biosecurity Map&quot;,&#xd;
        &quot;sectionKey&quot;: &quot;biosecurity-map&quot;, &#xd;
        &quot;questionAnswers&quot;: [{&#xd;
            &quot;question&quot;: &quot;upload a map&quot;,&#xd;
            &quot;questionKey&quot;: &quot;upload-plan&quot;,&#xd;
            &quot;answer&quot;:{&#xd;
                &quot;type&quot;: &quot;file&quot;,&#xd;
                &quot;value&quot;: {&#xd;
                    &quot;skipped&quot;: false,&#xd;
                    &quot;path&quot;: &quot;/biosecurity-map/31c897d9-102f-4892-9168-e874d36cd13c/2397ae4b-f10e-4de6-ad9c-fe6600e592ae&quot;&#xd;
                },&#xd;
                &quot;displayText&quot;: &quot;Large_image&quot;&#xd;
            }&#xd;
        }]&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Status code assertion">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion">
                <stringProp name="JSON_PATH">$.message</stringProp>
                <stringProp name="EXPECTED_VALUE">/^TB-\w{4}-\w{4}$/</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Small image">
              <stringProp name="HTTPSampler.domain">apha-apps-perms-case-mgmt-api.${__P(env)}.cdp-int.defra.cloud</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/submit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sections&quot;: [{&#xd;
    &quot;title&quot;: &quot;Movement origin&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;origin&quot;, &#xd;
    &quot;questionAnswers&quot;: [&#xd;
      {&#xd;
        &quot;question&quot;: &quot;Are you moving the animals on or off your farm or premises?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;onOffFarm&quot;,&#xd;
        &quot;answer&quot;: { &#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;off&quot;,&#xd;
          &quot;displayText&quot;: &quot;Off the farm or premises&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What type of premises are the animals moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;originType&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;: &quot;tb-restricted-farm&quot;,&#xd;
          &quot;displayText&quot;: &quot;TB restricted farm&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the County Parish Holding (CPH) number of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;: &quot;cphNumber&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;12/345/6789&quot;,&#xd;
          &quot;displayText&quot;:&quot;12/345/6789&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;: &quot;What is the address of your farm or premises where the animals are moving off?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;address&quot;,&#xd;
        &quot;answer&quot;: {&#xd;
          &quot;type&quot;: &quot;address&quot;,&#xd;
          &quot;value&quot;: {&#xd;
            &quot;addressLine1&quot;:&quot;Starfleet Headquarters&quot;,&#xd;
            &quot;addressTown&quot;:&quot;San Francisco&quot;,&#xd;
            &quot;addressPostcode&quot;:&quot;N11 1NN&quot;&#xd;
          },&#xd;
          &quot;displayText&quot;:&quot;Starfleet Headquarters\nSan Franciso\nN11 1NN&quot;&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Movement destination&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;destination&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;: &quot;Where are the animals going to?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;destinationType&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;radio&quot;,&#xd;
        &quot;value&quot;: &quot;slaughter&quot;,&#xd;
        &quot;displayText&quot;:&quot;Slaughter&quot;&#xd;
      }&#xd;
    }]&#xd;
  },&#xd;
  {&#xd;
    &quot;title&quot;:&quot;Receiving the licence&quot;,&#xd;
    &quot;sectionKey&quot;: &quot;licence&quot;,&#xd;
    &quot;questionAnswers&quot;:[{&#xd;
      &quot;question&quot;:&quot;What is the name of the registered owner of the cattle?&quot;,&#xd;
      &quot;questionKey&quot;:&quot;fullName&quot;,&#xd;
      &quot;answer&quot;:{&#xd;
        &quot;type&quot;: &quot;name&quot;,&#xd;
        &quot;value&quot;: {&#xd;
          &quot;firstName&quot;:&quot;John&quot;,&#xd;
          &quot;lastName&quot;:&quot;Doe&quot;&#xd;
        },&#xd;
        &quot;displayText&quot;:&quot;John Doe&quot;&#xd;
      }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;How would you like this licence sent to you?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;receiveMethod&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;radio&quot;,&#xd;
          &quot;value&quot;:&quot;email&quot;,&#xd;
          &quot;displayText&quot;:&quot;Email&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;question&quot;:&quot;What email address would you like the licence sent to?&quot;,&#xd;
        &quot;questionKey&quot;:&quot;emailAddress&quot;,&#xd;
        &quot;answer&quot;:{&#xd;
          &quot;type&quot;: &quot;text&quot;,&#xd;
          &quot;value&quot;:&quot;name@example.com&quot;,&#xd;
          &quot;displayText&quot;:&quot;eoin.corr@esynergy.co.uk&quot;&#xd;
        }&#xd;
      }]&#xd;
    },&#xd;
    {&#xd;
        &quot;title&quot;: &quot;Biosecurity Map&quot;,&#xd;
        &quot;sectionKey&quot;: &quot;biosecurity-map&quot;, &#xd;
        &quot;questionAnswers&quot;: [{&#xd;
            &quot;question&quot;: &quot;upload a map&quot;,&#xd;
            &quot;questionKey&quot;: &quot;upload-plan&quot;,&#xd;
            &quot;answer&quot;:{&#xd;
                &quot;type&quot;: &quot;file&quot;,&#xd;
                &quot;value&quot;: {&#xd;
                    &quot;skipped&quot;: false,&#xd;
                    &quot;path&quot;: &quot;/biosecurity-map/03e6bf1a-682f-47ec-bc75-4c35c519d00f/937d7e61-2ba1-4eb8-a019-c5ce3800b662&quot;&#xd;
                },&#xd;
                &quot;displayText&quot;: &quot;Small_image&quot;&#xd;
            }&#xd;
        }]&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Status code assertion">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion">
                <stringProp name="JSON_PATH">$.message</stringProp>
                <stringProp name="EXPECTED_VALUE">/^TB-\w{4}-\w{4}$/</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">report.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
